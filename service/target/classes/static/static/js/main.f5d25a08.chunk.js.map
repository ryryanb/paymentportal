{"version":3,"sources":["config.js","components/login.js","validation.js","components/enrollment.js","useToken.js","utils.js","components/payment.js","components/forgot_password.js","components/reset_password.js","components/change_password.js","App.js","reportWebVitals.js","index.js"],"names":["Config","apiUrl","webroot","Login","setToken","useState","username","password","loginDetails","setLoginDetails","error","setError","history","useHistory","loading","setLoading","handleChange","e","target","id","value","prevState","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","json","data","details","token","forceChangePassword","push","catch","err","text","errorMessage","Col","md","span","offset","className","Form","onSubmit","Group","controlId","Label","Control","type","name","placeholder","onChange","Button","variant","block","disabled","Spinner","as","animation","size","role","aria-hidden","to","Validation","forwardRef","ref","children","validatorRefs","useRef","validate","allError","Object","values","current","forEach","validationRef","assign","useImperativeHandle","getValidationChildRef","React","Children","map","child","isValidElement","Validator","cloneElement","validator","validatorRef","props","Reflect","deleteProperty","result","length","validations","onValidate","valueRef","useEffect","isDifferent","validation","oldValue","newValue","Array","isArray","ValidationHelper","Boolean","initialFrom","address","companyName","contactName","email","url","generatePassword","login","mustChangePassword","confirmPassword","phone","sendAccountInfo","formReducer","state","action","errorReducer","Enrollment","useReducer","enrollData","setEnrollData","submitError","setSubmitError","successMessage","setSuccessMessage","evt","handleCheckbox","checked","formValid","validForm","code","console","log","message","object","some","x","Card","Header","Body","test","isNaN","trim","readOnly","Text","Check","label","useToken","localStorage","getItem","userToken","setItem","mywindow","Utils","logout","clear","window","location","print","close","open","document","write","focus","getDate","date","moment","format","Payment","billAccountNumber","setBillAccountNumber","Date","fromDate","setFromDate","toDate","setToDate","payments","setPayments","totalQuantity","setTotalQuantity","totalAmount","setTotalAmount","paymentRef","summaryRef","getPayments","billSearch","rows","total","status","utils","search","handleDateChange","cogoToast","position","heading","Row","selected","dateFormat","bind","this","maxDate","icon","faSearch","keys","key","i","OverlayTrigger","placement","overlay","Tooltip","onClick","summary","outerHTML","table","faPrint","filename","faFileCsv","Table","striped","bordered","hover","index","payment","billerId","transactionId","fromAccount","toAccount","currency","amount","comment","colSpan","ForgotPasword","userName","forgotPassRequest","setForgotPassRequest","ResetPasword","resetToken","useParams","newPassword","formData","setFormData","resetPassRequest","ChangePassword","oldPassword","success","hideAfter","App","root","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Nav","Item","Link","NavLink","exact","path","component","render","ForgotPassword","ResetPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","origin","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f5d25a08.chunk.js","sourcesContent":["const Config = {\n    apiUrl:'',\n    webroot: 'psbbiller'\n}\nexport default Config;","import React, { useState } from \"react\";\r\nimport { Form, Button, Col, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Config from '../config.js';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nLogin.propTypes = {\r\n  setToken: PropTypes.func.isRequired\r\n}\r\n\r\nexport default function Login({ setToken }) {\r\n  const [loginDetails, setLoginDetails] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setLoginDetails(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    fetch(Config.apiUrl + '/authenticate', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(loginDetails)\r\n    }).then(response => {\r\n      if (!response.ok) { throw response }\r\n      return response.json()\r\n    })\r\n      .then(data => {\r\n        setToken(data.details.token);\r\n        if(data.details.forceChangePassword && data.details.forceChangePassword === true) {\r\n          history.push('/change-password');\r\n        } else {\r\n          history.push('/payment');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        if (err.text) {\r\n          err.text().then(errorMessage => {\r\n            setError(errorMessage);\r\n          })\r\n        } else {\r\n          setError('login Error');\r\n        }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Col md={{ span: 3, offset: 3 }} className=\"page-inner\">\r\n      <h3>Login</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"username\">\r\n          <Form.Label>User</Form.Label>\r\n          <Form.Control type=\"text\" name=\"username\" placeholder=\"Enter user\" value={loginDetails.username} onChange={handleChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" value={loginDetails.password} onChange={handleChange} />\r\n        </Form.Group>\r\n        {error !== '' && (<div className=\"text-danger\">{error}</div>)}\r\n        {loading === true ? <Button variant=\"primary\" block disabled>\r\n          <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n        Loading...\r\n        </Button> :\r\n        <Button variant=\"primary\" type=\"submit\" block>\r\n          Submit\r\n        </Button>}\r\n          <div className=\"forgot-pass text-right\">\r\n            <Link to=\"/forgot-password\">Forgot Password</Link>\r\n          </div>\r\n          <div className=\"enrollment text-right\">\r\n            <Link to=\"/enrollment\">Enrollment</Link>\r\n          </div>\r\n      </Form>\r\n    </Col>\r\n  );\r\n}\r\n","import React, { useEffect, useImperativeHandle, forwardRef, useRef } from \"react\";\n\nexport const Validation = forwardRef(function Validation({ children }, ref) {\n  const validatorRefs = useRef({});\n\n  const validate = () => {\n    let allError = {};\n    Object.values(validatorRefs.current).forEach(validationRef => {\n      //let error = validationRef ? validationRef.triggerValidate() : {};\n      let error = validationRef.validate();\n      //console.log('Individual error', error);\n      allError = Object.assign(allError, error);\n    });\n    //console.log(\"All error\", this.error);\n    return allError;\n  };\n\n  useImperativeHandle(ref, () => ({\n    validate\n  }), []);\n\n  const getChildrenRef = validator => {\n    return validatorRef => {\n      //Ref callback will be called with null when componenet unmount or update since we return new function\n      if (!validatorRef) {\n        Reflect.deleteProperty(validatorRefs.current, validator.props.name);\n        return;\n      }\n      validatorRefs.current[validator.props.name] = validatorRef;\n    };\n  };\n\n  const getValidationChildRef = children => {\n    // remove all old validationRef when component re-renders\n    validatorRefs.current = {};\n\n    if (!children) return children;\n    const type = typeof children;\n    if (type === \"boolean\") {\n      return children;\n    }\n    if (type === \"string\" || type === \"number\") {\n      return children;\n    }\n    return React.Children.map(children, child => {\n      if (!React.isValidElement(child)) {\n        return child;\n      }\n      if (child && child.type === Validator) {\n        return React.cloneElement(child, { ref: getChildrenRef(child) });\n      } else if (child.props.children) {\n        let result = getValidationChildRef(child.props.children);\n        if (result.length === 0) {\n          return child;\n        } else if (result.length === 1) {\n          result = result[0];\n        }\n        return React.cloneElement(child, {}, result);\n      }\n      return child;\n    });\n  };\n\n  return getValidationChildRef(children);\n});\n\nexport const Validator = forwardRef(function Validator({ name, value, validations = [], onValidate = () => {}, children }, ref) {\n  let valueRef = useRef(value);\n\n  useEffect(() => {\n    //simulating new and old value props check\n    if (isDifferent(valueRef.current, value)) {\n      valueRef.current = value;\n      validate();\n    }\n  });\n\n  useImperativeHandle(ref, () => ({\n    validate\n  }));\n\n  const validate = () => {\n    let error = {};\n    for (let validation of validations) {\n      error[name] = validation(value);\n      if (error[name]) break;\n    }\n    onValidate(error);\n    return error;\n  };\n\n  const isDifferent = (oldValue, newValue) => {\n    if (Array.isArray(oldValue)) {\n      return oldValue.length !== newValue.length;\n    }\n    //console.log('oldValue , newValue', oldValue, newValue);\n    return oldValue !== newValue;\n  };\n\n  return children;\n});\n\nexport const ValidationHelper = {\n  required: (errorMessage = \"Value is required\") => {\n    return value => {\n      return Boolean(value) ? \"\" : errorMessage;\n    };\n  }\n};\n\n","import React, { useReducer, useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Col, Spinner } from 'react-bootstrap';\r\nimport Config from '../config.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Validation, Validator, ValidationHelper } from \"../validation\";\r\n\r\nconst initialFrom = () => ({\r\n  address: '', companyName: '', contactName: '', email: '', url: '', generatePassword: false,\r\n    login: '', mustChangePassword: false, password: '', confirmPassword: '', phone: '', sendAccountInfo: false\r\n});\r\n\r\nconst formReducer = (state, action) => {\r\n  let newValue = {};\r\n  newValue[action.name] = action.value;\r\n  return Object.assign({}, state, newValue);\r\n};\r\n\r\nconst errorReducer = (allError, error) => {\r\n  return Object.assign({}, allError, error);\r\n};\r\n\r\nexport default function Enrollment() {\r\n  let validationRef = useRef(null);\r\n\r\n  let [enrollData, setEnrollData] = useReducer(formReducer, {}, initialFrom);\r\n  let [error, setError] = useReducer(errorReducer, {});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitError, setSubmitError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleChange = evt => {\r\n    setEnrollData({\r\n      name: evt.target.name,\r\n      value: evt.target.value\r\n    });\r\n  };\r\n\r\n  const handleCheckbox = (e) => {\r\n    const { name, checked } = e.target\r\n    if(name === 'generatePassword' && checked === true) {\r\n      setEnrollData({name: 'password', value: ''});\r\n      setEnrollData({name: 'confirmPassword', value: ''});\r\n    }\r\n    setEnrollData({\r\n      name: name,\r\n      value: checked\r\n    });\r\n  }\r\n\r\n  const onValidate = err => {\r\n    setError(err);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    let formValid = validationRef.current.validate();\r\n    if(validForm(formValid) === true) {\r\n      setLoading(true);\r\n      setSubmitError('');\r\n      fetch(Config.apiUrl + '/user/enroll', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(enrollData)\r\n      }).then(response => {\r\n        return response.json()\r\n      })\r\n      .then(data => {\r\n        if (data.code && data.code === 200) {\r\n          console.log(\"enroll successful\");\r\n          setSuccessMessage(data.message);\r\n        } else {\r\n          setLoading(false);\r\n          if (data.message) {\r\n            setSubmitError(data.message);\r\n          } else {\r\n            setSubmitError(\"can not enroll user\");\r\n          }\r\n        }\r\n        console.log(data);\r\n      })\r\n      .catch(err => {\r\n        setLoading(false);\r\n        setSubmitError(err.message);\r\n      })\r\n    }\r\n  };\r\n\r\n  const numberValidation = value => {\r\n    return isNaN(value.trim()) ? \"Value should be number\" : \"\";\r\n  };\r\n\r\n  const emailValidation = value => {\r\n    return !/\\S+@\\S+\\.\\S+/.test(value) ? \"Invalid email\" : \"\";\r\n  };\r\n\r\n  const passwordValidation = value => {\r\n    if(enrollData.generatePassword === false) {\r\n      if(value === \"\") {\r\n        return \"Password is required\";\r\n      }else if(value.length < 8) {\r\n        return \"Password must be at least 8 characters long\"\r\n      } else {\r\n        return \"\";\r\n      } \r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const confirmPasswordValidation = value => {\r\n    if(enrollData.generatePassword === false) {\r\n      if(value === \"\") {\r\n        return \"Confirm password is required\";\r\n      }else if(value !== enrollData.password) {\r\n        return \"Password is not match\";\r\n      } else {\r\n        return \"\";\r\n      } \r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const validForm = (object) => {\r\n    return !Object.values(object).some(x => (x !== null && x !== ''));\r\n  }\r\n\r\n  return (\r\n    <Col md={{ span: 5, offset: 3 }} className=\"page-inner\">\r\n      { successMessage === '' ?\r\n      <div>\r\n      <h3>Enrollment</h3>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Validation ref={validationRef}>\r\n          <Card>\r\n            <Card.Header as=\"h5\">Information</Card.Header>\r\n            <Card.Body>\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Login</Form.Label>\r\n                <Validator name=\"login\" value={enrollData.login} validations={[ValidationHelper.required(\"Login is required\")]} \r\n                  onValidate={onValidate}>\r\n                  <Form.Control type=\"text\" name=\"login\" value={enrollData.login} onChange={handleChange}/>\r\n                </Validator>\r\n                {error.login && <span className=\"error text-danger\">{error.login}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Company name</Form.Label>\r\n                <Validator name=\"companyName\" value={enrollData.companyName} validations={[ValidationHelper.required(\"Company name is required\")]} \r\n                  onValidate={onValidate}>\r\n                  <Form.Control type=\"text\" name=\"companyName\" value={enrollData.companyName} onChange={handleChange}/>\r\n                </Validator>\r\n                {error.companyName && <span className=\"error text-danger\">{error.companyName}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Validator name=\"address\" value={enrollData.address} validations={[ValidationHelper.required(\"Address is required\")]} \r\n                  onValidate={onValidate}>\r\n                  <Form.Control type=\"text\" name=\"address\" value={enrollData.address} onChange={handleChange}/>\r\n                </Validator>\r\n                {error.address && <span className=\"error text-danger\">{error.address}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Contact name</Form.Label>\r\n                <Validator name=\"contactName\" value={enrollData.contactName} validations={[ValidationHelper.required(\"Contact name is required\")]}\r\n                  onValidate={onValidate}>\r\n                <Form.Control type=\"text\" name=\"contactName\" value={enrollData.contactName} onChange={handleChange} />\r\n              </Validator>\r\n              {error.contactName && <span className=\"error text-danger\">{error.contactName}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Validator name=\"email\" value={enrollData.email} validations={[ValidationHelper.required(\"Email is required\"), emailValidation]}\r\n                  onValidate={onValidate}>\r\n                  <Form.Control type=\"text\" name=\"email\" value={enrollData.email} onChange={handleChange} />\r\n                </Validator>\r\n                {error.email && <span className=\"error text-danger\">{error.email}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Validator name=\"phone\" value={enrollData.phone} validations={[ValidationHelper.required(\"Phone is required\"),\r\n                  numberValidation]} \r\n                  onValidate={onValidate}>\r\n                  <Form.Control type=\"text\" name=\"phone\" value={enrollData.phone} onChange={handleChange}/>\r\n                </Validator>\r\n                {error.phone && <span className=\"error text-danger\">{error.phone}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Label>URL</Form.Label>\r\n                <Form.Control type=\"text\" name=\"url\" value={enrollData.url} onChange={handleChange} />\r\n              </Form.Group>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"mt-3\">\r\n            <Card.Header as=\"h5\">Authentication</Card.Header>\r\n            <Card.Body>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Validator name=\"password\" value={enrollData.password} validations={[passwordValidation]}\r\n                    onValidate={onValidate}>\r\n                  <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" value={enrollData.password} onChange={handleChange} readOnly={enrollData.generatePassword} />\r\n                  <Form.Text className=\"text-muted\">\r\n                    Must be at least 8 characters long.\r\n                  </Form.Text>\r\n                </Validator>\r\n                {error.password && <span className=\"error text-danger\">{error.password}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"required\">\r\n                <Form.Label>Confirmation</Form.Label>\r\n                <Validator name=\"confirmPassword\" value={enrollData.confirmPassword} validations={[confirmPasswordValidation]}\r\n                    onValidate={onValidate}>\r\n                  <Form.Control type=\"password\" name=\"confirmPassword\" value={enrollData.confirmPassword} onChange={handleChange} placeholder=\"Confirm Password\" readOnly={enrollData.generatePassword}/>\r\n                </Validator>\r\n                {error.confirmPassword && <span className=\"error text-danger\">{error.confirmPassword}</span>}\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Form.Check type=\"checkbox\" name=\"generatePassword\" label=\"Generate Password\" onChange={handleCheckbox} />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Check type=\"checkbox\" name=\"mustChangePassword\" label=\"Must change password at next logon\" value={enrollData.mustChangePassword} onChange={handleCheckbox} />\r\n              </Form.Group>\r\n            </Card.Body>\r\n          </Card>\r\n          <Form.Group className=\"pt-2\">\r\n            <Form.Check type=\"checkbox\" name=\"sendAccountInfo\" label=\"Send account information to the user\" value={enrollData.sendAccountInfo} onChange={handleCheckbox} />\r\n          </Form.Group>\r\n        </Validation>\r\n        {submitError !== '' && (<div className=\"error text-danger\">{submitError}</div>)}\r\n        {loading === true ? <Button variant=\"primary\" block disabled>\r\n          <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n        Loading...\r\n        </Button> : \r\n        <Button variant=\"primary\" type=\"submit\" className=\"mt-3\" block>\r\n          Submit\r\n          </Button>}\r\n      </Form></div> :\r\n      <div> {successMessage}\r\n      {(enrollData.generatePassword === true && enrollData.sendAccountInfo === true) && \r\n        <p>New password and Account information are sent to the registration email.</p>}\r\n      {(enrollData.generatePassword === true && enrollData.sendAccountInfo === false) && <p>New password is sent to the registration email.</p>} \r\n      {(enrollData.sendAccountInfo === true && enrollData.generatePassword === false) && <p>Account information is sent to the registration email.</p>}\r\n      <p><Link to={'/login'}>Login</Link></p></div>\r\n    }\r\n    </Col>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default function useToken() {\r\n  const getToken = () => {\r\n    return  localStorage.getItem('token');\r\n  };\r\n\r\n  const [token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n    localStorage.setItem('token', userToken);\r\n    setToken(userToken);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    token\r\n  }\r\n}","import Config from './config.js';\r\n\r\nvar mywindow = \"\";\r\n\r\nconst Utils = {\r\n  logout: function () {\r\n    localStorage.clear();\r\n    window.location = \"/\" + Config.webroot;\r\n  },\r\n  \r\n  print: function(data) {\r\n      if(typeof(mywindow) == 'object'){\r\n        try {\r\n          mywindow.close();\t\r\n        } catch (err) {\r\n          console.log(err.message);\r\n        }\r\n      }\r\n        \r\n      mywindow = window.open('', 'print', 'height=600,width=900,scrollbars=yes,resizable=yes');\r\n      mywindow.document.write('<html><head><title>Print</title>');\r\n      mywindow.document.write('<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\" integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\" crossorigin=\"anonymous\" />');\r\n      mywindow.document.write('</head><body style=\"background-color:#FFFFFF; background: #FFFFFF;\">');\r\n      \r\n      mywindow.document.write('<button class=\"btn btn-danger\" onclick=\"window.close();\">&nbsp;&nbsp;Close&nbsp;&nbsp;&nbsp;</button></div>');\r\n      mywindow.document.write('<div><center><img src=\"/' + Config.webroot + '/images/blue_logo.svg\" width=\"150px\"><br/><h3>Bill Payments</h3></center></div><br/>');\r\n      mywindow.document.write(data);\r\n      mywindow.document.write('</body></html>');\r\n      mywindow.document.close();  \r\n      mywindow.focus();  \r\n      mywindow.window.print();\r\n      return true;\r\n    }\r\n}\r\n\r\nexport default Utils;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col, Form, Button, Table, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport Config from '../config.js';\r\nimport moment from 'moment';\r\nimport useToken from '../useToken';\r\nimport utils from '../utils';\r\nimport cogoToast from 'cogo-toast';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFileCsv, faPrint, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction getDate(date) {\r\n  if(date && date !== '') {\r\n    return moment(date).format('MM/DD/YYYY');\r\n  }\r\n  return date;\r\n}\r\nexport default function Payment() {\r\n  const [billAccountNumber, setBillAccountNumber] = useState('');\r\n  const [fromDate, setFromDate] = useState(new Date());\r\n  const [toDate, setToDate] = useState(new Date());\r\n  const [error, setError] = useState('');\r\n  const { token } = useToken();\r\n  const [payments, setPayments] = useState([]);\r\n  const [totalQuantity, setTotalQuantity] = useState();\r\n  const [totalAmount, setTotalAmount] = useState({});\r\n  const paymentRef = useRef(null);\r\n  const summaryRef = useRef(null);\r\n  const paymentHeader = [\"Biller ID\", \"Transaction ID\", \"From Account\", \"To Account\", \"Amount\", \"Transaction Date\", \"Comment\"];\r\n  const csvHeaders = [\r\n    { label: \"Biller ID\", key: \"billerId\" },\r\n    { label: \"Transaction ID\", key: \"fromAccount\" },\r\n    { label: \"From Account\", key: \"fromAccount\" },\r\n    { label: \"To Account\", key: \"toAccount\" },\r\n    { label: \"Amount\", key: \"amountText\" },\r\n    { label: \"Transaction Date\", key: \"date\" },\r\n    { label: \"Comment\", key: \"comment\" }\r\n  ];\r\n\r\n  const getPayments = async () => {\r\n    setError('');\r\n    let billSearch = {\r\n      billAccountNumber: billAccountNumber,\r\n      fromDate: getDate(fromDate),\r\n      toDate: getDate(toDate)\r\n    }\r\n\r\n    fetch(Config.apiUrl + '/payment/history', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify(billSearch)\r\n    }).then(response => {\r\n      return response.json()\r\n    })\r\n      .then(data => {\r\n        if(data.code === 200) {\r\n          setPayments(data.details.rows);\r\n          setTotalQuantity(data.details.total);\r\n          setTotalAmount(data.details.totalAmount);\r\n        } else if (data.status && data.status === 401) {\r\n          utils.logout();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        if (err.text) {\r\n          err.text().then(errorMessage => {\r\n            setError(errorMessage);\r\n          })\r\n        } else {\r\n          setError('payment Error');\r\n        }\r\n      })\r\n  }\r\n\r\n  const search = async e => {\r\n    e.preventDefault();\r\n    getPayments();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPayments();\r\n  }, []);\r\n\r\n  const handleDateChange = (name, date) => {\r\n    if(name === 'toDate') {\r\n      if(date < fromDate) {\r\n        cogoToast.error('To Date should always be greater than equal to From Date.', { position: 'top-center', heading: 'Error' });\r\n      } else {\r\n        setToDate(date);\r\n      }\r\n    } else {\r\n      setFromDate(date);\r\n    }\r\n  };\r\n\r\n  const print = (e) => {\r\n    var summary = summaryRef.current.outerHTML;\r\n    var table = paymentRef.current.outerHTML;\r\n    utils.print(summary + table + summary);\r\n  };\r\n\r\n  return (\r\n    <div id=\"payment-history\" className=\"container p-2\">\r\n      <div id=\"filter\" className=\"pb-2\">\r\n        <Form onSubmit={search}>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Bill Account Number</Form.Label>\r\n                <Form.Control type=\"text\" name=\"billAccountNumber\" value={billAccountNumber} onChange={e => setBillAccountNumber(e.target.value)} />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>From Date</Form.Label>\r\n                <DatePicker id=\"fromDate\" selected={fromDate} dateFormat=\"MM/dd/yyyy\" onChange={handleDateChange.bind(this, 'fromDate')} maxDate={\r\n                    new Date()\r\n                  } />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>To Date</Form.Label>\r\n                <DatePicker id=\"toDate\" selected={toDate} dateFormat=\"MM/dd/yyyy\" onChange={handleDateChange.bind(this, 'toDate')} maxDate={\r\n                    new Date()\r\n                  } />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {error !== '' && (<div className=\"text-danger\">{error}</div>)}\r\n          <Button variant=\"primary\" type=\"submit\"> <FontAwesomeIcon icon={faSearch} /> Search</Button>\r\n        </Form>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          { payments.length > 0 &&\r\n          <div>\r\n            <div className=\"clearfix\">\r\n              <div ref={summaryRef} className=\"float-right\">\r\n                  Total number of transactions: <strong>{totalQuantity} </strong><br/>\r\n                  Total amount: <strong>{Object.keys(totalAmount).map((key, i) => (\r\n                    <span key={i}>{key} {totalAmount[key]} {i < (Object.keys(totalAmount).length - 1) && \"; \"}</span>\r\n                  ))}</strong>\r\n              </div>\r\n            </div>\r\n          \r\n           <div className=\"clearfix bg-primary\">\r\n             <div className=\"toolbar float-right\">\r\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"tooltip-print\">Print</Tooltip>}>\r\n                <Link to=\"#\" className=\"text-white\" onClick={print}><FontAwesomeIcon icon={faPrint} /></Link>\r\n              </OverlayTrigger>\r\n              <OverlayTrigger placement=\"top\" overlay={<Tooltip id=\"tooltip-export\">Export to CSV</Tooltip>}>\r\n                <CSVLink data={payments} headers={csvHeaders} filename={\"Bill Payments.csv\"}>\r\n                  <FontAwesomeIcon className=\"text-white\" icon={faFileCsv} />\r\n                </CSVLink>\r\n              </OverlayTrigger>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          }\r\n          <Table striped bordered hover ref={paymentRef}>\r\n            <thead>\r\n              <tr>\r\n                {paymentHeader.map((value, index) => (\r\n                  <th className=\"text-center\" key={index}>\r\n                    <div>{value}</div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {payments.length > 0 ?\r\n              payments.map(payment => (\r\n                <tr key={payment.id}>\r\n                  <td className=\"text-center\">{payment.billerId}</td>\r\n                  <td className=\"text-center\">{payment.transactionId}</td>\r\n                  <td className=\"text-center\">{payment.fromAccount}</td>\r\n                  <td className=\"text-center\">{payment.toAccount}</td>\r\n                  <td className=\"text-right\">{payment.currency} {payment.amount}</td>\r\n                  <td className=\"text-center\">{payment.date}</td>\r\n                  <td>{payment.comment}</td>\r\n                </tr>\r\n              )) : <tr><td className=\"text-center\" colSpan=\"7\">Bill Payments list is empty</td></tr>}\r\n            </tbody>\r\n          </Table>\r\n          { payments.length > 0 &&\r\n          <div className=\"text-right\">\r\n              Total number of transactions: <strong>{totalQuantity} </strong><br/>\r\n              Total amount: <strong>{Object.keys(totalAmount).map((key, i) => (\r\n                  <span key={i}>{key} {totalAmount[key]} {i < (Object.keys(totalAmount).length - 1) && \"; \"}</span>\r\n                ))}</strong>\r\n          </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from \"react\";\nimport { Form, Button, Col, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Config from '../config.js';\n\n\nexport default function ForgotPasword() {\n  const [forgotPassRequest, setForgotPassRequest] = useState({ userName: '', email: '' });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setForgotPassRequest(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    fetch(Config.apiUrl + '/forgotPassword', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(forgotPassRequest)\n    }).then(response => {\n      console.log(response);\n      if (!response.ok && response.status === 401) \n        { throw response }\n      return response.json()\n    })\n      .then(data => {\n        setLoading(false);\n        if(data.code === 200) {\n          setSuccessMessage(data.message);\n        } else {\n          setError(data.message);\n        }\n      })\n      .catch(err => {\n        setLoading(false);\n        if (err.text) {\n          err.text().then(errorMessage => {\n            setError(errorMessage);\n          })\n        } else {\n          setError('can not send request');\n        }\n      })\n  }\n\n  return (\n    <Col md={{ span: 3, offset: 3 }} className=\"page-inner\">\n   \n    { successMessage === '' ?\n      <div>\n      <h3>Forgot Password</h3>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"userName\">\n          <Form.Label>User</Form.Label>\n          <Form.Control type=\"text\" name=\"userName\" placeholder=\"Enter user\" value={forgotPassRequest.userName} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" value={forgotPassRequest.email} onChange={handleChange} />\n        </Form.Group>\n        {error !== '' && (<div className=\"text-danger\">{error}</div>)}\n        {loading === true ? <Button variant=\"primary\" block disabled>\n        <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\n        Loading...\n      </Button> :\n        <Button variant=\"primary\" type=\"submit\" block>\n          Submit\n        </Button>}\n      </Form></div> :\n      <div> {successMessage} <p className=\"pt-4\"><Link className=\"btn btn-outline-primary\" to={'/login'}>OK</Link></p></div>\n    }\n    </Col>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Spinner } from 'react-bootstrap';\nimport Config from '../config.js';\nimport { Link, useParams } from 'react-router-dom';\n\n\nexport default function ResetPasword() {\n  const   { resetToken } = useParams();\n  const [formData, setFormData] = useState({newPassword: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setFormData(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    if (formData.newPassword !== formData.confirmPassword) {\n      setError(\"Password is not match\");\n      setLoading(false);\n    } else {\n      let resetPassRequest = {\n        token: resetToken,\n        newPassword: formData.newPassword\n      };\n      setError('');\n      fetch(Config.apiUrl + '/resetPassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(resetPassRequest)\n      }).then(response => {\n        if (!response.ok && response.status === 401) \n          { throw response }\n        return response.json()\n      })\n      .then(data => {\n        if(data.code === 200) {\n          setSuccessMessage(data.message);\n        } else {\n          setError(data.message);\n          setLoading(false);\n        }\n      })\n      .catch(err => {\n        setLoading(false);\n        if (err.text) {\n          err.text().then(errorMessage => {\n            setError(errorMessage);\n          })\n        } else {\n          setError('can not reset password');\n        }\n      })\n    }\n  }\n\n  return (\n    <Col md={{ span: 3, offset: 3 }} className=\"page-inner\">\n      { successMessage === '' ?\n      <div>\n        <h3>Reset Password</h3>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"newPassword\" className=\"required\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Enter New Password\" value={formData.newPassword} onChange={handleChange} />\n            <Form.Text className=\"text-muted\">\n              Must be at least 8 characters long.\n              </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\" className=\"required\">\n            <Form.Label>Confirmation</Form.Label>\n            <Form.Control type=\"password\" value={formData.confirmPassword} onChange={handleChange} placeholder=\"Confirm New Password\"/>\n          </Form.Group>\n          {error !== '' && (<div className=\"text-danger\">{error}</div>)}\n          {loading === true ? <Button variant=\"primary\" block disabled>\n            <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\n          Loading...\n          </Button> :\n          <Button variant=\"primary\" type=\"submit\" block>\n            Submit\n          </Button>}\n        </Form></div> :\n      <div> {successMessage} <p><Link to={'/login'}>Login</Link></p></div>\n    }\n    </Col>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Form, Button, Col, Spinner } from 'react-bootstrap';\nimport Config from '../config.js';\nimport { useHistory} from 'react-router-dom';\nimport useToken from '../useToken';\nimport cogoToast from 'cogo-toast';\n\n\nexport default function ChangePassword() {\n  const { token } = useToken();\n  const [formData, setFormData] = useState({oldPassword:'', newPassword: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => {\n    const { id, value } = e.target\n    setFormData(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    if (formData.password !== '' && formData.newPassword !== formData.confirmPassword) {\n      setError(\"Password is not match\");\n      setLoading(false);\n    } else {\n      let resetPassRequest = {\n        oldPassword: formData.oldPassword,\n        newPassword: formData.newPassword\n      };\n      setError('');\n      fetch(Config.apiUrl + '/changePassword', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(resetPassRequest)\n      }).then(response => {\n        if (!response.ok) { throw response }\n        return response.json()\n      })\n      .then(data => {\n        if(data.code === 200) {\n          cogoToast.success(data.message, { position: 'top-center', heading: 'Success', hideAfter: 7 });\n          setLoading(false);\n          history.push('/payment');\n        } else {\n          setError(data.message);\n          setLoading(false);\n        }\n      })\n      .catch(err => {\n        setLoading(false);\n        if (err.text) {\n          err.text().then(errorMessage => {\n            setError(errorMessage);\n          })\n        } else {\n          setError('can not change password');\n        }\n      })\n    }\n  }\n\n  return (\n    <Col md={{ span: 3, offset: 3 }} className=\"page-inner\">\n      <h3>Change Password</h3>\n      <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"oldPassword\" className=\"required\">\n          <Form.Label>Old Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter Old Password\" value={formData.oldPassword} onChange={handleChange} />\n        </Form.Group>\n        <Form.Group controlId=\"newPassword\" className=\"required\">\n          <Form.Label>New Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter New Password\" value={formData.newPassword} onChange={handleChange} />\n          <Form.Text className=\"text-muted\">\n            Must be at least 8 characters long.\n            </Form.Text>\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\" className=\"required\">\n          <Form.Label>Confirmation</Form.Label>\n          <Form.Control type=\"password\" value={formData.confirmPassword} onChange={handleChange} placeholder=\"Confirm New Password\"/>\n        </Form.Group>\n        {error !== '' && (<div className=\"text-danger\">{error}</div>)}\n        {loading === true ? <Button variant=\"primary\" block disabled>\n          <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\n        Loading...\n        </Button> :\n        <Button variant=\"primary\" type=\"submit\" block>\n          Submit\n        </Button>}\n      </Form>\n    </Col>\n  );\n}\n","import React from 'react';\r\nimport './App.css';\r\nimport { Switch, Route, NavLink, Redirect} from 'react-router-dom';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport Login from './components/login';\r\nimport Enrollment from './components/enrollment';\r\nimport Payment from './components/payment';\r\nimport ForgotPassword from './components/forgot_password';\r\nimport ResetPassword from './components/reset_password';\r\nimport useToken from './useToken';\r\nimport utils from './utils';\r\nimport ChangePassword from './components/change_password';\r\nimport Config from './config.js';\r\n\r\nfunction App() {\r\n  const { token, setToken } = useToken();\r\n  var root = \"/\" + Config.webroot;\r\n  return (\r\n    <div className=\"app wrapper\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href={root}>Third Party Billers </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n          <Nav.Item className=\"ml-auto\">\r\n          {token && <Nav.Link as={NavLink} to=\"/logout\" onClick={utils.logout}>Logout</Nav.Link>}\r\n          </Nav.Item>\r\n         </Navbar>\r\n      {!token ?  <Switch>\r\n        <Route exact path=\"/\" render={() => {\r\n            return (\r\n              <Redirect to=\"/login\" />\r\n            )\r\n          }}\r\n        />\r\n          <Route path={\"/login\"}>\r\n            <Login setToken={setToken} />\r\n          </Route>\r\n      <Route path=\"/enrollment\" component={Enrollment}></Route>\r\n      <Route path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n      <Route path = \"/reset-password/:resetToken\" exact component = {ResetPassword} /></Switch> :   \r\n        <div className=\"page-wrapper\">\r\n          <Switch>\r\n            <Route exact path=\"/change-password\" component={ChangePassword}></Route>\r\n            <Route path={['/', '/payment']} component={Payment}></Route>\r\n          </Switch>\r\n        </div>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Config from './config.js';\r\n\r\nConfig.apiUrl = window.location.origin + '/' + Config.webroot + '/api';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n       <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}